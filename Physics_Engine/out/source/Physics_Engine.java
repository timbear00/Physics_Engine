/* autogenerated by Processing revision 1277 on 2021-11-18 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Physics_Engine extends PApplet {

Mover m;
float mass;
float gravitational_acceleration = 10;   //중력가속도 = 9.8m/s^2

 public void setup() {
  /* size commented out by preprocessor */;
  frameRate(60);

  mass = 10;
  m = new Mover(width/2, 50, mass);
  
}

 public void draw() {
  background(255);
  
  PVector gravity = new PVector(0, mass * gravitational_acceleration);

  m.applyForce(gravity);
  m.update();
  m.display();

  if( millis() >= 1000 && millis() <= 1050 ) {
    println(millis());
    println(m.position.y-50);
  }
  
}

class Mover {
    PVector position;           // Object의 x, y좌표
    PVector velocity;           // Object의 속력 - vector, m/s
    PVector acceleration;       // Object의 가속도 - vector, m/s^2
    float mass;

    Mover(float _x, float _y, float _mass) {
        position = new PVector(_x, _y);
        velocity = new PVector(0,0);
        acceleration = new PVector(0,0);
        mass = _mass;
    }

     public void applyForce(PVector force) {        // Object에 힘을 적용
        PVector a =  PVector.div(force, mass);
        acceleration.add(a);                //가속도 적용
    }

     public void update() {
        velocity.add( PVector.div(acceleration, frameRate) );         //Delta Time 적용
        position.add( velocity );

        println("Frame: "+ frameCount + velocity );

        acceleration.mult(0);
    }

     public void display() {
        stroke(0);
        strokeWeight(2);
        fill(127);
        ellipse(position.x, position.y, 50, 50);
    }

}


  public void settings() { size(800, 800); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Physics_Engine" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
